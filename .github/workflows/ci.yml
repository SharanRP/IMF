name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Run linting
      run: npm run lint

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    
    if: |
      (github.ref == 'refs/heads/develop' && github.event_name == 'push') ||
      (github.ref == 'refs/heads/main' && github.event_name == 'push')
    
    # strategy:
    #   matrix:
    #     environment: [development, production]
    #     include:
    #       - environment: development
    #         url: 'https://dev-imf-gadget-api.azurewebsites.net'
    #       - environment: production
    #         url: 'https://imf-gadget-api.azurewebsites.net'

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build
      env:
        NODE_ENV: ${{ matrix.environment }}

    # - name: Deploy to Azure Web App
    #   uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: imf-gadget-api-${{ matrix.environment }}
    #     publish-profile: ${{ secrets[format('AZURE_WEBAPP_PUBLISH_PROFILE_{0}', matrix.environment)] }}
    #     package: .
    #   env:
    #     NODE_ENV: ${{ matrix.environment }}
    #     DATABASE_URL: ${{ secrets[format('DATABASE_URL_{0}', matrix.environment)] }}
    #     JWT_SECRET: ${{ secrets[format('JWT_SECRET_{0}', matrix.environment)] }}
    #     BASE_URL: ${{ matrix.url }}
